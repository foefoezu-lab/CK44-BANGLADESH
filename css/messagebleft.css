// messagebleft.js
// Loop popup kemenangan besar - versi stabil & cocok sama CSS messagebleft.css

// Data menang sample, silakan edit / tambah
const winnerFeed = [
  {
    player: "Shafin***48",
    game: "Mega Moolah",
    amount: "৳9,694 BDT",
    note: "menang besar di Bangladesh!"
  },
  {
    player: "Arif***16",
    game: "Big Bass Bonanza",
    amount: "৳10,284 BDT",
    note: "menang besar di Bangladesh!"
  },
  {
    player: "Nadia***33",
    game: "Sugar Rush",
    amount: "৳19,410 BDT",
    note: "payout cepat & aman!"
  },
  {
    player: "Rohan***72",
    game: "Wild West Gold",
    amount: "৳14,216 BDT",
    note: "WD sukses 24/7!"
  },
  {
    player: "Amin***44",
    game: "Gates of Olympus",
    amount: "৳11,880 BDT",
    note: "bonus aktif VIP 30!"
  }
];

// berapa lama antar popup baru (ms)
const SHOW_INTERVAL = 5000; // 5 detik
// berapa kartu maksimum yang nongol sekaligus
const MAX_ACTIVE_CARDS = 3;

let feedIndex = 0;

// cari container popup dari HTML
let wrap = document.querySelector(".message-left-container");

// fallback safety: kalau belum ada container, bikin
if (!wrap) {
  wrap = document.createElement("div");
  wrap.className = "message-left-container";
  document.body.appendChild(wrap);
}

// fungsi bikin markup kartu SESUAI STRUCTURE CSS
function createCard(dataObj) {
  const card = document.createElement("div");
  card.className = "message-left-card";

  // inner HTML harus sesuai sama .thumb-mini, .texts, .player/.game/.amount
  card.innerHTML = `
    <div class="thumb-mini"></div>
    <div class="texts">
      <div class="player">${dataObj.player} ${dataObj.note}</div>
      <div class="game">Game: ${dataObj.game}</div>
      <div class="amount">${dataObj.amount}</div>
    </div>
  `;

  return card;
}

// fungsi push kartu baru
function pushCard() {
  // ambil data pemenang berikutnya
  const d = winnerFeed[feedIndex % winnerFeed.length];
  feedIndex++;

  // buat kartu sesuai struktur CSS
  const card = createCard(d);

  // masukin card ke container
  wrap.appendChild(card);

  // kalau udah kebanyakan card yang nongol sekaligus, hapus yang paling lama
  const cards = wrap.querySelectorAll(".message-left-card");
  if (cards.length > MAX_ACTIVE_CARDS) {
    const first = cards[0];

    // kasih animasi keluar pake keyframes msgHide (dari CSS)
    first.style.animation = "msgHide .3s forwards ease";

    setTimeout(() => {
      if (first && first.parentNode) {
        first.parentNode.removeChild(first);
      }
    }, 300);
  }
}

// start loop
function startFeed() {
  // langsung tampil 1 di awal
  pushCard();

  // lalu tiap interval
  setInterval(pushCard, SHOW_INTERVAL);
}

// eksekusi saat DOM siap
if (document.readyState === "loading") {
  document.addEventListener("DOMContentLoaded", startFeed);
} else {
  startFeed();
}
