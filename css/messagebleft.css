
// messagebleft.js
// versi stabil looping smooth, tidak bikin freeze
// tampilan (warna hijau dsb) tetap ngikutin CSS lama kamu: messagebleft.css

// Data pemenang, kamu bisa ganti/extend manual
const winnerFeed = [
  {
    name: "Safi***85",
    game: "Sweet Bonanza",
    amount: "৳22,116 BDT",
    note: "menang besar di Bangladesh!"
  },
  {
    name: "Sadi***98",
    game: "Sugar Rush",
    amount: "৳19,410 BDT",
    note: "menang besar di Bangladesh!"
  },
  {
    name: "Roha***72",
    game: "Wild West Gold",
    amount: "৳14,216 BDT",
    note: "menang besar di Bangladesh!"
  },
  {
    name: "Amin***44",
    game: "Gates of Olympus",
    amount: "৳11,880 BDT",
    note: "payout cepat & aman!"
  },
  {
    name: "Nadi***33",
    game: "Big Bass Bonanza",
    amount: "৳46,169 BDT",
    note: "WD sukses 24/7!"
  }
];

// durasi antar popup baru (ms)
const SHOW_INTERVAL = 5000; // 5 detik
// maksimum kartu aktif yang boleh nongol barengan
const MAX_ACTIVE_CARDS = 3;

// index untuk muter data winnerFeed
let feedIndex = 0;

// container utama (harus sudah ada di HTML kamu):
// <div class="message-left-container"></div>
const wrap = document.querySelector(".message-left-container");

// helper bikin elemen 1 kartu popup
function makeCard(data) {
  // NOTE:
  // Di CSS lama kamu, kartu popup biasanya pakai class seperti `.message-left-card`
  // dan di dalamnya ada struktur teks hijau dsb.
  // Di sini kita bikin markup generik yang aman.

  const card = document.createElement("div");
  card.className = "message-left-card";

  card.innerHTML = \`
    <div class="msg-header" style="font-size:.7rem; line-height:1.4; font-weight:600; color:#00ff6a;">
      \${data.name} menang besar di Bangladesh!
    </div>
    <div class="msg-body" style="font-size:.7rem; line-height:1.4; color:#fff;">
      Game: \${data.game}<br/>
      \${data.note}
    </div>
    <div class="msg-amount" style="font-size:.75rem; font-weight:700; color:#00ff6a; margin-top:4px;">
      \${data.amount}
    </div>
  \`;

  // animasi masuk halus
  card.style.opacity = "0";
  card.style.transform = "translateY(10px) scale(0.96)";
  requestAnimationFrame(() => {
    card.style.transition = "all .3s ease";
    card.style.opacity = "1";
    card.style.transform = "translateY(0) scale(1)";
  });

  return card;
}

// tambahkan satu popup baru
function pushCard() {
  if (!wrap) return;

  // ambil winner berikutnya
  const data = winnerFeed[feedIndex % winnerFeed.length];
  feedIndex++;

  // buat elemen kartu
  const card = makeCard(data);

  // tempel ke container
  wrap.appendChild(card);

  // kalau jumlah kartu melebihi MAX_ACTIVE_CARDS -> hapus yang paling lama (atas)
  const cards = wrap.querySelectorAll(".message-left-card");
  if (cards.length > MAX_ACTIVE_CARDS) {
    const first = cards[0];

    // animasi keluar halus dulu sebelum remove
    first.style.transition = "all .3s ease";
    first.style.opacity = "0";
    first.style.transform = "translateY(10px) scale(0.96)";

    setTimeout(() => {
      if (first && first.parentNode) {
        first.parentNode.removeChild(first);
      }
    }, 300);
  }
}

// start loop ringan (tiap 5 detik buat popup baru)
function startFeed() {
  // pertama langsung tampil satu
  pushCard();

  // setelah itu interval
  setInterval(pushCard, SHOW_INTERVAL);
}

// jalanin setelah DOM siap
if (document.readyState === "loading") {
  document.addEventListener("DOMContentLoaded", startFeed);
} else {
  startFeed();
}
